[["index.html", "REDUS Framework Manuals Preface", " REDUS Framework Manuals Ibrahim Umar 2021-09-22 Preface This book will explain about the REDUS Framework. "],["redus-framework-cloud-user-manual.html", "1 REDUS Framework (Cloud) User Manual 1.1 Pre-requisites 1.2 Starting up 1.3 Selecting an assessment 1.4 Configuring an assessment 1.5 Running the assessment", " 1 REDUS Framework (Cloud) User Manual Welcome to the user manual of the REDUS Framework. This guide will show you the step-by-step guide for running the assessment workflow using the REDUS Framework cloud application. 1.1 Pre-requisites An internet browser. (Optional) Experience in the REDUS Survey Time Series XML Recipe guide. 1.2 Starting up Point your browser to the URL of the REDUS framework: http://myrto.hi.no:3000 Note that the above URL can change You’ll be greeted with the assessment selection page as below: 1.3 Selecting an assessment You may select the available assessment from the drop-down list. select assessment After selecting an assessment, click on Run assessment now button if you want to use the pre-defined configuration and data. Otherwise, click the Configure selected assessment button to configure the selected assessment prior to its run. TIPS: You can run multiple assessments in parallel if you wish to do that. Simply open a new browser tab and select another assessment to run. 1.4 Configuring an assessment As of now, the supported configuration of an assesment are: Survey data Assessment program selection NOTE: Support for catch and acoustic data is not yet supported. 1.4.1 Configure the survey data To configure the survey data input, click on the Input data on the left hand side menu and select Survey data on the tab menu. You will be presented by the list of survey data (by fleets) that is included in the assessment. configure survey Each of these survey data can be individually modified using the drop down selection below the survey name. The supported actions are: As is : This means that you don’t want to modify the pre-defined data that comes with the assessment. (Official) Pre-computed values : Choose this to use the official result from the nightly StoX survey time series run. &gt; NOTE: The official results are currently available here: http://astarte.imr.no/ocpu/library/REDUStools/www/imrsts.html . This was generated and served using the REDUStools R package available here: https://github.com/REDUS-IMR/REDUStools. Re-process using StoX : This option will force the survey time series re-processing using StoX/Rstox. For this you will need to fill-in the recipe for the StoX processing. The recipe is an XML document. Below is a sample recipe for the Barents Sea Northeast Arctic cod bottom trawl index in winter survey time series: &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;redus_master xmlns=&quot;http://www.imr.no/formats/redus/master/v0.1&quot; revision=&quot;1&quot; version=&quot;0.1&quot;&gt; &lt;configuration&gt; &lt;saveOutputTable&gt;true&lt;/saveOutputTable&gt; &lt;saveRunStatus&gt;false&lt;/saveRunStatus&gt; &lt;/configuration&gt; &lt;globalParameter&gt; &lt;!-- &lt;fileFix from=&quot;biotic_cruiseNumber_1994001_Anny+KrÃ¦mer.xml&quot; to=&quot;biotic_cruiseNumber_1994001_Anny+Kræmer.xml&quot;/&gt; --&gt; &lt;/globalParameter&gt; &lt;parameters sts=&quot;Barents Sea Northeast Arctic cod bottom trawl index in winter&quot; revision=&quot;1&quot; version=&quot;0.1&quot;&gt; &lt;configuration&gt; &lt;stsName&gt;Barents Sea Northeast Arctic cod bottom trawl index in winter&lt;/stsName&gt; &lt;overwriteNMD&gt;false&lt;/overwriteNMD&gt; &lt;forceReProcess&gt;true&lt;/forceReProcess&gt; &lt;forceBioticV3&gt;true&lt;/forceBioticV3&gt; &lt;skipYear&gt;1993&lt;/skipYear&gt; &lt;startYear&gt;&lt;/startYear&gt; &lt;endYear&gt;&lt;/endYear&gt; &lt;levelRequested&gt;bootstrapImpute&lt;/levelRequested&gt; &lt;bootstrapSeed&gt;77&lt;/bootstrapSeed&gt; &lt;bootstrapImputeSeed&gt;101&lt;/bootstrapImputeSeed&gt; &lt;bootstrapIter&gt;5&lt;/bootstrapIter&gt; &lt;coresUse&gt;1&lt;/coresUse&gt; &lt;groupType&gt;age&lt;/groupType&gt; &lt;minAge&gt;1&lt;/minAge&gt; &lt;maxAge&gt;12&lt;/maxAge&gt; &lt;plusAge&gt;7&lt;/plusAge&gt; &lt;numberScale&gt;1000000&lt;/numberScale&gt; &lt;dataType&gt;survey&lt;/dataType&gt; &lt;applyOverrides&gt;false&lt;/applyOverrides&gt; &lt;/configuration&gt; &lt;override&gt; &lt;!-- &lt;parameter name=&quot;UseProcessData&quot;&gt;true&lt;/parameter&gt; --&gt; &lt;/override&gt; &lt;/parameters&gt; &lt;/redus_master&gt; NOTE: The documentation for the recipe is here. reprocess survey using StoX Input manual values : Here you can input manual values in the text format for the specified survey data. 1.4.2 Configure the assessment program To select the available assessment program, click on the Assessment from the left hand side menu. You’ll be presented by the information of the current assessment used in the model and a drop down selection of Latest SAM and Latest XSAM option. select assessment NOTE: Latest SAM and XSAM is using the master branch of the https://github.com/fishfollower/SAM repository, the only difference is XSAM will try to use the covariance matrices from the StoX output 1.4.3 Finish configuring If you are finished with configuring, please click the Run assessment now button to run the assessment workflow using your defined configuration. 1.5 Running the assessment After clicking the Run assessment now button, there will be a popup that shows the status of the provisioning process before the assessment is run: select assessment Sit back and wait until the provision is complete, in which indicated by the assessment run dashboard: select assessment There are some important elements in the dashboard: change button: This enables you to re-start a new assessment workflow. destroy button: This will irreversibly destroy the current running assessment. There is also a direct URL link to the run. With this link you can resume the current assessment from anywhere as long as you can connect to the REDUS framework server. For example you might run the assessment from your office computer and wanted to get the results later from your home computer (e.g., via VPN). Sets of tab menu items: File Manager: This tab provides an interface that is similar to Windows Explorer that can be used to explore files and to upload/download files from the current assessment workflow. Console: This tab provides a Linux console for the current assessment workflow. You can run R and experiment with stuffs. Logs: This tab provides useful logs (outputs, warnings, errors) for the current assessment workflows. This is used mostly for debugging and finding errors. Reports: After the assessment finishes, this tab will be active and provides the report and a link to the downloadable artifacts from the assessment workflow run. "],["redus-master-recipe.html", "2 REDUS Master Recipe 2.1 Examples 2.2 Usage 2.3 Parameter details", " 2 REDUS Master Recipe REDUS framework uses a special kind of recipe to process the IMR Survey Time Series from NMD’s Dataset Explorer. This recipe is formulated in an XML format and contains many user configurable options. 2.1 Examples Below are some recipe samples: 2.1.1 1. Single Survey Time series &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;redus_master xmlns=&quot;http://www.imr.no/formats/redus/master/v0.1&quot; revision=&quot;1&quot; version=&quot;0.1&quot;&gt; &lt;configuration&gt; &lt;saveOutputTable&gt;true&lt;/saveOutputTable&gt; &lt;saveRunStatus&gt;false&lt;/saveRunStatus&gt; &lt;/configuration&gt; &lt;globalParameter&gt; &lt;!-- &lt;fileFix from=&quot;biotic_cruiseNumber_1994001_Anny+KrÃ¦mer.xml&quot; to=&quot;biotic_cruiseNumber_1994001_Anny+Kræmer.xml&quot;/&gt; --&gt; &lt;/globalParameter&gt; &lt;parameters sts=&quot;Barents Sea Northeast Arctic cod bottom trawl index in winter&quot; revision=&quot;1&quot; version=&quot;0.1&quot;&gt; &lt;configuration&gt; &lt;stsName&gt;Barents Sea Northeast Arctic cod bottom trawl index in winter&lt;/stsName&gt; &lt;overwriteNMD&gt;false&lt;/overwriteNMD&gt; &lt;forceReProcess&gt;true&lt;/forceReProcess&gt; &lt;forceBioticV3&gt;true&lt;/forceBioticV3&gt; &lt;skipYear&gt;1993&lt;/skipYear&gt; &lt;startYear&gt;&lt;/startYear&gt; &lt;endYear&gt;&lt;/endYear&gt; &lt;levelRequested&gt;bootstrapImpute&lt;/levelRequested&gt; &lt;bootstrapSeed&gt;77&lt;/bootstrapSeed&gt; &lt;bootstrapImputeSeed&gt;101&lt;/bootstrapImputeSeed&gt; &lt;bootstrapIter&gt;5&lt;/bootstrapIter&gt; &lt;coresUse&gt;1&lt;/coresUse&gt; &lt;groupType&gt;age&lt;/groupType&gt; &lt;minAge&gt;1&lt;/minAge&gt; &lt;maxAge&gt;12&lt;/maxAge&gt; &lt;plusAge&gt;7&lt;/plusAge&gt; &lt;numberScale&gt;1000000&lt;/numberScale&gt; &lt;dataType&gt;survey&lt;/dataType&gt; &lt;applyOverrides&gt;false&lt;/applyOverrides&gt; &lt;/configuration&gt; &lt;override&gt; &lt;!-- &lt;parameter name=&quot;UseProcessData&quot;&gt;true&lt;/parameter&gt; --&gt; &lt;/override&gt; &lt;/parameters&gt; &lt;/redus_master&gt; 2.1.2 2. Multiple survey time series &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;redus_master xmlns=&quot;http://www.imr.no/formats/redus/master/v0.1&quot; revision=&quot;1&quot; version=&quot;0.1&quot;&gt; &lt;configuration&gt; &lt;saveOutputTable&gt;true&lt;/saveOutputTable&gt; &lt;saveRunStatus&gt;false&lt;/saveRunStatus&gt; &lt;/configuration&gt; &lt;globalParameter&gt; &lt;!-- &lt;fileFix from=&quot;biotic_cruiseNumber_1994001_Anny+KrÃ¦mer.xml&quot; to=&quot;biotic_cruiseNumber_1994001_Anny+Kræmer.xml&quot;/&gt; --&gt; &lt;/globalParameter&gt; &lt;parameters sts=&quot;Barents Sea Northeast Arctic cod bottom trawl index in winter&quot; revision=&quot;1&quot; version=&quot;0.1&quot;&gt; &lt;configuration&gt; &lt;stsName&gt;Barents Sea Northeast Arctic cod bottom trawl index in winter&lt;/stsName&gt; &lt;overwriteNMD&gt;false&lt;/overwriteNMD&gt; &lt;forceReProcess&gt;true&lt;/forceReProcess&gt; &lt;forceBioticV3&gt;true&lt;/forceBioticV3&gt; &lt;skipYear&gt;1993&lt;/skipYear&gt; &lt;startYear&gt;&lt;/startYear&gt; &lt;endYear&gt;&lt;/endYear&gt; &lt;levelRequested&gt;bootstrapImpute&lt;/levelRequested&gt; &lt;bootstrapSeed&gt;77&lt;/bootstrapSeed&gt; &lt;bootstrapImputeSeed&gt;101&lt;/bootstrapImputeSeed&gt; &lt;bootstrapIter&gt;5&lt;/bootstrapIter&gt; &lt;coresUse&gt;1&lt;/coresUse&gt; &lt;groupType&gt;age&lt;/groupType&gt; &lt;minAge&gt;1&lt;/minAge&gt; &lt;maxAge&gt;12&lt;/maxAge&gt; &lt;plusAge&gt;7&lt;/plusAge&gt; &lt;numberScale&gt;1000000&lt;/numberScale&gt; &lt;dataType&gt;survey&lt;/dataType&gt; &lt;applyOverrides&gt;false&lt;/applyOverrides&gt; &lt;/configuration&gt; &lt;override&gt; &lt;!-- &lt;parameter name=&quot;UseProcessData&quot;&gt;true&lt;/parameter&gt; --&gt; &lt;/override&gt; &lt;/parameters&gt; &lt;parameters sts=&quot;Barents Sea capelin acoustic abundance estimate in autumn&quot; revision=&quot;1&quot; version=&quot;0.1&quot;&gt; &lt;configuration&gt; &lt;stsName&gt;Barents Sea capelin acoustic abundance estimate in autumn&lt;/stsName&gt; &lt;overwriteNMD&gt;false&lt;/overwriteNMD&gt; &lt;forceReProcess&gt;true&lt;/forceReProcess&gt; &lt;forceBioticV3&gt;true&lt;/forceBioticV3&gt; &lt;skipYear&gt;2016,2019&lt;/skipYear&gt; &lt;startYear&gt;2016&lt;/startYear&gt; &lt;endYear&gt;2020&lt;/endYear&gt; &lt;levelRequested&gt;bootstrapImpute&lt;/levelRequested&gt; &lt;bootstrapSeed&gt;77&lt;/bootstrapSeed&gt; &lt;bootstrapImputeSeed&gt;101&lt;/bootstrapImputeSeed&gt; &lt;bootstrapIter&gt;5&lt;/bootstrapIter&gt; &lt;coresUse&gt;1&lt;/coresUse&gt; &lt;groupType&gt;age&lt;/groupType&gt; &lt;minAge&gt;1&lt;/minAge&gt; &lt;maxAge&gt;12&lt;/maxAge&gt; &lt;plusAge&gt;7&lt;/plusAge&gt; &lt;numberScale&gt;1000000&lt;/numberScale&gt; &lt;dataType&gt;survey&lt;/dataType&gt; &lt;applyOverrides&gt;false&lt;/applyOverrides&gt; &lt;/configuration&gt; &lt;override&gt; &lt;parameter name=&quot;UseProcessData&quot;&gt;true&lt;/parameter&gt; &lt;/override&gt; &lt;/parameters&gt; &lt;/redus_master&gt; 2.2 Usage The recipe can be used in a stand-alone processing or included in the REDUS framework workflow. In brief, the processing of the recipe can be done by using the REDUStools R package (https://github.com/REDUS-IMR/REDUStools). install.packages(&quot;remotes&quot;) remotes::install_github(&quot;REDUS-IMR/REDUStools&quot;) remotes::install_github(&quot;SEA2DATA/Rstox&quot;, ref=&quot;develop&quot;) # Output below can be the processing status or result table # subject to the &#39;saveOutputTable&#39; parameter in the XML recipe output &lt;- REDUStools::processRstoxSTS(&quot;barents_sea_neacod_trawl_winter.xml&quot;) Please see another guide that will explain more on the above stand-alone proces here. 2.3 Parameter details saveOutputTable: Setting this node text to true tells the script to save the resulting table from the StoX process in an rds object on disk. Many of the REDUS framework requires this to be set as true. Setting it to false tells REDUStools::processRstoxSTS() function in the example usage above to return the result table. saveRunStatus: Setting this node text to true tells the script to save the processing status of the survey time series in an rds object on disk. fileFix: This is useful if user want to override data input filename(s) from all the survey time series project.xml files. It will search for a matching string as in the from attribute and replace it to the filename specified in the to attribute. This parameter have a global scope, means it will be affecting all the survey time series in the recipe. parameters: This node contains the unique identifier of the survey time series, please set a unique name for the sts attribute (usually the same name as the survey time series itself). Don’t forget to set the revision and version parameters as well if applicable. stsName: This node text indicates the name of the survey time series that will be processed. The names have to be exactly the same as the name found in NMD Dataset Explorer. overwriteNMD: Setting this node text to true indicates that you want to overwrite the data that you might have downloaded earlier in your local disk. forceReProcess: The script will always re-process the survey time series if set to true. Otherwise it will use the result from the previous process. forceBioticV3: Some recent biotic data from NMD have been saved with NMD Biotic v3.1 format. Since RstoX can’t yet process the data, this switch sometimes necessary to force the header of Biotic v3.1 into Biotic V3. Note that the script won’t change the content of the data. skipYear: Write the years that you want to skip from the processing and separate them using comma sign if you have more that one. Setting this to empty means that you don’t want to skip any years. startYear: The start of year that you want to process. Setting this empty will process the earliest year possible. endYear: The last year that you want to process. Setting this empty will process the survey time series until the last year possible. levelRequested: The StoX output data comes from three possible levels: SuperIndAbundance, bootstrap, and bootstrapImpute. Usually bootstrapImpute is the preferred level of output. bootstrapSeed: Specify a seed value to be used in the bootstrap process. bootstrapImputeSeed: Specify a seed value to be used in the impute process. bootstrapIter: Specify the number of iteration for the bootstrap and impute process. coresUse: Specify the number of cores that will be utilize for the StoX process. groupType: Specify the groupings for the indices. The possible values are age and LenGrp. minAge, maxAge, plusAge: The script will prepare the output table using these age parameters. This won’t affect processing, only the output. numberScale: This value will be used as a multiplier for the output table. This won’t affect processing, only the output. dataType: This is internal identifier for the REDUSframework. Leave it to survey for survey time series. applyOverrides: If set to true, the script will try to override some parameters in the project.xml files for all the year in a survey time series. Populate the &lt;override&gt;&lt;parameter&gt;...&lt;/parameter&gt;&lt;/override&gt; sub-nodes with all overrides that you wish to be applied. For example &lt;parameter name=\"UseProcessData\"&gt;true&lt;/parameter&gt; will search UseProcessData nodes in a project.xml file and set their values to true. You can have multiple overrides for a survey time series. "],["redustools-standalone.html", "3 REDUSTOOLS Standalone Example 3.1 Preparing the master recipe 3.2 Running the process", " 3 REDUSTOOLS Standalone Example This guide shows you a step-by-step guide on how to run a standalone REDUStools with an XML recipe to process a survey time series. 3.1 Preparing the master recipe For this example we will use an the Barents Sea capelin acoustic abundance estimate in autumn survey time series. Below is an example recipe and we save the xml into assets/barents_sea_capelin_acoustic_autumn.xml file. &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;redus_master xmlns=&quot;http://www.imr.no/formats/redus/master/v0.1&quot; revision=&quot;1&quot; version=&quot;0.1&quot;&gt; &lt;configuration&gt; &lt;useLatestRstox&gt;true&lt;/useLatestRstox&gt; &lt;saveOutputTable&gt;true&lt;/saveOutputTable&gt; &lt;saveOutputStatics&gt;true&lt;/saveOutputStatics&gt; &lt;saveRunStatus&gt;true&lt;/saveRunStatus&gt; &lt;generateAssessmentFiles&gt;true&lt;/generateAssessmentFiles&gt; &lt;/configuration&gt; &lt;globalParameter&gt; &lt;!-- &lt;fileFix from=&quot;biotic_cruiseNumber_1994001_Anny+KrÃ¦mer.xml&quot; to=&quot;biotic_cruiseNumber_1994001_Anny+Kræmer.xml&quot;/&gt; --&gt; &lt;/globalParameter&gt; &lt;parameters sts=&quot;Barents Sea capelin acoustic abundance estimate in autumn&quot; revision=&quot;1&quot; version=&quot;0.1&quot;&gt; &lt;configuration&gt; &lt;stsName&gt;Barents Sea capelin acoustic abundance estimate in autumn&lt;/stsName&gt; &lt;overwriteNMD&gt;false&lt;/overwriteNMD&gt; &lt;forceReProcess&gt;true&lt;/forceReProcess&gt; &lt;forceBioticV3&gt;true&lt;/forceBioticV3&gt; &lt;skipYear&gt;&lt;/skipYear&gt; &lt;startYear&gt;2018&lt;/startYear&gt; &lt;endYear&gt;2019&lt;/endYear&gt; &lt;levelRequested&gt;bootstrapImpute&lt;/levelRequested&gt; &lt;bootstrapSeed&gt;77&lt;/bootstrapSeed&gt; &lt;bootstrapImputeSeed&gt;101&lt;/bootstrapImputeSeed&gt; &lt;bootstrapIter&gt;5&lt;/bootstrapIter&gt; &lt;coresUse&gt;1&lt;/coresUse&gt; &lt;groupType&gt;age&lt;/groupType&gt; &lt;minAge&gt;1&lt;/minAge&gt; &lt;maxAge&gt;12&lt;/maxAge&gt; &lt;plusAge&gt;7&lt;/plusAge&gt; &lt;numberScale&gt;1000000&lt;/numberScale&gt; &lt;dataType&gt;survey&lt;/dataType&gt; &lt;applyOverrides&gt;false&lt;/applyOverrides&gt; &lt;/configuration&gt; &lt;override&gt; &lt;!-- &lt;parameter name=&quot;UseProcessData&quot;&gt;true&lt;/parameter&gt; --&gt; &lt;/override&gt; &lt;/parameters&gt; &lt;/redus_master&gt; 3.2 Running the process 3.2.1 Setup First, we setup and install the necessary packages. Setting up the environment is necessary, otherwise by default REDUStools will try to use the /data/REDUS directory which might not available in your running platform. install.packages(&quot;remotes&quot;) remotes::install_github(&quot;SEA2DATA/Rstox&quot;, ref=&quot;develop&quot;) remotes::install_github(&quot;REDUS-IMR/REDUStools&quot;) # Without the below command, the result data will be put in /data/REDUS directory # or REDUStools:::getConfig()$root.dir # Setting it to &quot;docker&quot; means we will use the current active directory Sys.setenv(R_CONFIG_ACTIVE = &quot;docker&quot;) 3.2.2 Process Now we process the survey time series. Wait for a while as it can take some time to finish. In the end we will print out the processing status. # Run process! status &lt;- REDUStools::processRstoxSTS(&quot;assets/barents_sea_capelin_acoustic_autumn.xml&quot;) print(status) 3.2.3 Examine data After the above is finised, let’s load the data to examine it. # Get the data stsdata &lt;- REDUStools::loadSTS(&quot;Barents Sea capelin acoustic abundance estimate in autumn&quot;) # Get the metadata print(stsdata$meta) ## $stsName ## [1] &quot;Barents Sea capelin acoustic abundance estimate in autumn&quot; ## ## $overwriteNMD ## [1] &quot;false&quot; ## ## $forceReProcess ## [1] &quot;true&quot; ## ## $forceBioticV3 ## [1] &quot;true&quot; ## ## $skipYear ## [1] &quot;&quot; ## ## $startYear ## [1] &quot;2018&quot; ## ## $endYear ## [1] &quot;2019&quot; ## ## $levelRequested ## [1] &quot;bootstrapImpute&quot; ## ## $bootstrapSeed ## [1] &quot;77&quot; ## ## $bootstrapImputeSeed ## [1] &quot;101&quot; ## ## $bootstrapIter ## [1] &quot;5&quot; ## ## $coresUse ## [1] &quot;1&quot; ## ## $groupType ## [1] &quot;age&quot; ## ## $minAge ## [1] &quot;1&quot; ## ## $maxAge ## [1] &quot;12&quot; ## ## $plusAge ## [1] &quot;7&quot; ## ## $numberScale ## [1] &quot;1000000&quot; ## ## $dataType ## [1] &quot;survey&quot; ## ## $applyOverrides ## [1] &quot;false&quot; print(stsdata$fp) ## $buildTime ## [1] &quot;Wed Sep 22 10:48:40 2021&quot; ## ## $masterRev ## [1] &quot;da572dd7aa46857b9cddc98ef4ad72df79f8fe2c&quot; ## ## $rstoxRev ## [1] &quot;41beebdf85a1b6c0b29b8e436b6f42d2d738d6a6&quot; ## ## $rstoxVer ## [1] &quot;1.11.1&quot; ## ## $RVer ## [1] &quot;R version 4.0.5 (2021-03-31)&quot; # Get the data print(stsdata$data) ## year .id age Ab.Sum Weight.Sum ## 1: 2018 1 NA NA NA ## 2: 2018 1 0 1.858158e+08 454321187 ## 3: 2018 1 1 5.658849e+10 267453782819 ## 4: 2018 1 2 5.127899e+10 722402520609 ## 5: 2018 1 3 1.940289e+10 455744734005 ## 6: 2018 1 4 6.479721e+07 1620497372 ## 7: 2018 1 5 NA NA ## 8: 2018 2 NA NA NA ## 9: 2018 2 0 NA NA ## 10: 2018 2 1 7.047482e+10 349774718001 ## 11: 2018 2 2 6.908417e+10 947886811679 ## 12: 2018 2 3 2.261514e+10 522400804296 ## 13: 2018 2 4 6.114607e+08 18433955563 ## 14: 2018 2 5 NA NA ## 15: 2018 3 NA NA NA ## 16: 2018 3 0 2.603217e+08 520643347 ## 17: 2018 3 1 4.544111e+10 215385339537 ## 18: 2018 3 2 6.386157e+10 911724193299 ## 19: 2018 3 3 2.324392e+10 550167185382 ## 20: 2018 3 4 3.316548e+08 9108207475 ## 21: 2018 3 5 6.766864e+05 24360709 ## 22: 2018 4 NA NA NA ## 23: 2018 4 0 1.332267e+08 205449264 ## 24: 2018 4 1 7.506643e+10 394085788882 ## 25: 2018 4 2 7.204304e+10 916212362924 ## 26: 2018 4 3 1.788082e+10 378488646657 ## 27: 2018 4 4 3.223851e+08 8599669368 ## 28: 2018 4 5 3.915266e+06 133119057 ## 29: 2018 5 NA 5.228091e+06 240492163 ## 30: 2018 5 0 1.697118e+08 339423576 ## 31: 2018 5 1 5.468721e+10 261815864238 ## 32: 2018 5 2 5.142159e+10 673885776263 ## 33: 2018 5 3 1.139378e+10 232508748394 ## 34: 2018 5 4 1.347231e+08 3608628164 ## 35: 2018 5 5 2.481954e+06 90591328 ## 36: 2019 1 NA 6.167043e+07 1490637572 ## 37: 2019 1 1 1.974878e+10 85465126380 ## 38: 2019 1 2 1.445034e+10 210927048730 ## 39: 2019 1 3 9.356174e+09 224004815530 ## 40: 2019 1 4 1.947998e+09 52440068749 ## 41: 2019 1 5 NA NA ## 42: 2019 2 NA 3.952683e+07 928175090 ## 43: 2019 2 1 2.009545e+10 79761515603 ## 44: 2019 2 2 1.434316e+10 203721867124 ## 45: 2019 2 3 7.205293e+09 179309120691 ## 46: 2019 2 4 1.378739e+09 35294581838 ## 47: 2019 2 5 5.876453e+07 1126320196 ## 48: 2019 3 NA 1.016105e+07 161258027 ## 49: 2019 3 1 1.939539e+10 107353585833 ## 50: 2019 3 2 6.151520e+09 85506300359 ## 51: 2019 3 3 4.102326e+09 90292191890 ## 52: 2019 3 4 8.883581e+08 22206357748 ## 53: 2019 3 5 NA NA ## 54: 2019 4 NA 1.932162e+07 97710541 ## 55: 2019 4 1 1.969037e+10 113019879620 ## 56: 2019 4 2 7.499155e+09 108603894416 ## 57: 2019 4 3 4.110904e+09 90754185897 ## 58: 2019 4 4 7.817540e+08 18208339390 ## 59: 2019 4 5 NA NA ## 60: 2019 5 NA 5.635425e+07 0 ## 61: 2019 5 1 1.968001e+10 93567753075 ## 62: 2019 5 2 1.324392e+10 179881310966 ## 63: 2019 5 3 5.883584e+09 140796382520 ## 64: 2019 5 4 9.236369e+08 22534407539 ## 65: 2019 5 5 6.404967e+06 118491889 ## year .id age Ab.Sum Weight.Sum # Get the data (lengthgroup-based) print(stsdata$data2) ## year .id LenGrp age Ab.Sum Weight.Sum ## 1: 2018 1 8 NA NA NA ## 2: 2018 1 8 0 185815828 454321187 ## 3: 2018 1 8 1 6278731952 13913299442 ## 4: 2018 1 8 2 NA NA ## 5: 2018 1 8 3 NA NA ## --- ## 1676: 2019 5 20 1 NA NA ## 1677: 2019 5 20 2 NA NA ## 1678: 2019 5 20 3 NA NA ## 1679: 2019 5 20 4 NA NA ## 1680: 2019 5 20 5 NA NA # Note that &quot;.id&quot; column means the bootstrap id number (see in the .xml file for the number of bootstrap done) 3.2.4 (Optional) Making a nice single page visualization You can generate a nice static page with graphs and tables (also in PDF and CSV formats) by running this piece of code below. # Now make a nice multi-format output: REDUStools:::createStaticOutput(&quot;Barents Sea capelin acoustic abundance estimate in autumn&quot;, &quot;./out&quot;) # Point your browser to: # ./out/Barents Sea capelin acoustic abundance estimate in autumn/output/index.html Below is an example of the output. The full output contains many other output formats. Abundance Age group ( x 1e+06 ) Year 0 1 2 3 4 5 2018 187 . 27 60451 . 61 61537 . 87 18907 . 31 293 . 00 2 . 36 2019 0 . 00 19722 . 00 11137 . 62 6131 . 66 1184 . 10 32 . 58 Weight Age group (in grams) Year 0 1 2 3 4 5 2018 2 . 03 4 . 92 13 . 56 22 . 63 28 . 24 35 . 07 2019 0 . 00 4 . 86 14 . 16 23 . 65 25 . 45 19 . 10 Metadata param value 1 buildTime Wed Sep 22 10:48:40 2021 2 masterRev da572dd7aa46857b9cddc98ef4ad72df79f8fe2c 3 rstoxRev 41beebdf85a1b6c0b29b8e436b6f42d2d738d6a6 4 rstoxVer 1.11.1 5 RVer R version 4.0.5 (2021-03-31) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
